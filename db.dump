-- MariaDB dump 10.19  Distrib 10.6.4-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: taynuilttrees
-- ------------------------------------------------------
-- Server version	10.6.4-MariaDB-1:10.6.4+maria~focal

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `Customer`
--

DROP TABLE IF EXISTS `Customer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Customer` (
  `customer_ref` varchar(100) NOT NULL,
  `firstname` varchar(20) DEFAULT NULL,
  `surname` varchar(50) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `company` varchar(100) DEFAULT NULL,
  `address_number` varchar(50) DEFAULT NULL,
  `address_street` varchar(100) DEFAULT NULL,
  `address_town` varchar(100) DEFAULT NULL,
  `address_postcode` varchar(8) DEFAULT NULL,
  PRIMARY KEY (`customer_ref`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Customer`
--

LOCK TABLES `Customer` WRITE;
/*!40000 ALTER TABLE `Customer` DISABLE KEYS */;
INSERT INTO `Customer` VALUES ('a4','dave','fakewell','asd@asd.com','main bar','123','banana','town','ml39te'),('a5','dave','caldwell','asd@asd.com','main bar','123','banana','town','ml39te'),('aaaaa','aaa','aaa','aa@aa.com','aa','aa','aaa','aa','aa'),('affff5','dave','caldwell','asd@asd.com','main bar','123','banana','town','ml39te'),('b1','Darren','Fakewelll','123@123.com','dazzatrees','24','banana rd','fruittown','ky168m'),('c1','daz','cald','a@a','com','1','2','3','4');
/*!40000 ALTER TABLE `Customer` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Customer_Phone`
--

DROP TABLE IF EXISTS `Customer_Phone`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Customer_Phone` (
  `phone_number` varchar(15) NOT NULL,
  `customer_ref` varchar(100) NOT NULL,
  PRIMARY KEY (`phone_number`,`customer_ref`),
  KEY `Customer_Phone_FK` (`customer_ref`),
  CONSTRAINT `Customer_Phone_FK` FOREIGN KEY (`customer_ref`) REFERENCES `Customer` (`customer_ref`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Customer_Phone_CHECK` CHECK (`phone_number` regexp '^0\\d{10}$')
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Customer_Phone`
--

LOCK TABLES `Customer_Phone` WRITE;
/*!40000 ALTER TABLE `Customer_Phone` DISABLE KEYS */;
INSERT INTO `Customer_Phone` VALUES ('07565345141','affff5'),('07565625141','a4'),('07565625141','a5'),('07565625141','aaaaa'),('07565625141','affff5'),('07565625141','b1'),('07565625145','a5'),('07565625165','a4'),('07565625441','b1');
/*!40000 ALTER TABLE `Customer_Phone` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Delivery`
--

DROP TABLE IF EXISTS `Delivery`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Delivery` (
  `delivery_ref` varchar(100) NOT NULL,
  `address_number` varchar(50) NOT NULL,
  `address_street` varchar(100) NOT NULL,
  `address_town` varchar(100) NOT NULL,
  `address_postcode` varchar(7) NOT NULL,
  `dispatch_date` date DEFAULT NULL,
  `site_ref` varchar(100) DEFAULT NULL,
  `delivery_charge` decimal(4,2) DEFAULT NULL,
  `box_bag_total` int(11) DEFAULT NULL,
  `notes` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`delivery_ref`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Delivery`
--

LOCK TABLES `Delivery` WRITE;
/*!40000 ALTER TABLE `Delivery` DISABLE KEYS */;
INSERT INTO `Delivery` VALUES ('d1','my house','on my st','in my town','postcod','2020-11-07','ban',1.00,1,NULL),('d2','my house','on my st','in my town','postcod','2020-11-07','ban',1.00,1,NULL),('d3','1','1','1','1','2020-10-08','1',1.00,1,NULL);
/*!40000 ALTER TABLE `Delivery` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER dispatch_date_insert
BEFORE INSERT
ON Delivery FOR EACH ROW

BEGIN 
	DECLARE invoice_dt INT;
	SELECT invoice_date
		INTO invoice_dt
		FROM Invoice i2
		WHERE NEW.delivery_ref = i2.delivery_ref;
	IF NEW.dispatch_date < invoice_dt then
		SIGNAL sqlstate '45001' set message_text = "This dispatch date is not valid, please enter a dispatch date after the invoice date";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER dispatch_date_update
BEFORE UPDATE 
ON Delivery FOR EACH ROW

BEGIN 
	DECLARE invoice_dt INT;
	SELECT invoice_date
		INTO invoice_dt
		FROM Invoice i2
		WHERE NEW.delivery_ref = i2.delivery_ref;
	IF NEW.dispatch_date < invoice_dt then
		SIGNAL sqlstate '45001' set message_text = "This dispatch date is not valid, please enter a dispatch date after the invoice date";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER delivery_charge_update
BEFORE UPDATE
ON Delivery FOR EACH ROW

BEGIN 
	DECLARE invoice_paid BOOL;
	SELECT paid
	INTO invoice_paid
	FROM Invoice i 
	WHERE i.delivery_ref = OLD.delivery_ref;
	
	IF invoice_paid AND NEW.delivery_charge != OLD.delivery_charge THEN 
		SIGNAL sqlstate '45001' set message_text = "You cannot change the delivery charge after the invoice has been paid";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `Invoice`
--

DROP TABLE IF EXISTS `Invoice`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Invoice` (
  `invoice_no` varchar(100) NOT NULL,
  `invoice_date` date DEFAULT NULL,
  `discount` int(11) DEFAULT NULL,
  `vat` int(11) DEFAULT NULL,
  `payment_method` enum('bacs','cheque','cash') DEFAULT NULL,
  `paid` tinyint(1) DEFAULT NULL,
  `date_paid` date DEFAULT NULL,
  `order_no` varchar(100) NOT NULL,
  `delivery_ref` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`invoice_no`),
  UNIQUE KEY `Invoice_UN` (`delivery_ref`),
  KEY `Invoice_FK` (`order_no`),
  CONSTRAINT `Invoice_FK` FOREIGN KEY (`order_no`) REFERENCES `Orders` (`order_no`) ON UPDATE CASCADE,
  CONSTRAINT `Invoice_FK_2` FOREIGN KEY (`delivery_ref`) REFERENCES `Delivery` (`delivery_ref`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `Invoice_CHECK_discount` CHECK (`discount` <= 100 and `discount` >= 0),
  CONSTRAINT `Invoice_CHECK_vat` CHECK (`vat` <= 100 and `vat` >= 0),
  CONSTRAINT `Invoice_CHECK_paid` CHECK (`paid` = 1 or `paid` = 0)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Invoice`
--

LOCK TABLES `Invoice` WRITE;
/*!40000 ALTER TABLE `Invoice` DISABLE KEYS */;
INSERT INTO `Invoice` VALUES ('i1','2000-01-01',0,1,'bacs',0,'2000-02-01','o4','d1'),('i2','2000-01-01',0,1,'bacs',0,'2000-02-01','o4','d2'),('i3','2000-01-01',NULL,NULL,NULL,NULL,'2000-02-01','o4','d3');
/*!40000 ALTER TABLE `Invoice` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_dispatch_date_insert
BEFORE INSERT
ON Invoice FOR EACH ROW
BEGIN 
	DECLARE dispatch_dt INT;
	SELECT dispatch_date
		INTO dispatch_dt
		FROM Delivery d
		WHERE NEW.delivery_ref = d.delivery_ref;
	IF NEW.invoice_date > dispatch_dt then
		SIGNAL sqlstate '45001' set message_text = "This invoice date is not valid, please enter an invoice date before the dispatch date";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_order_date_insert
BEFORE INSERT
ON Invoice FOR EACH ROW
BEGIN 
	DECLARE order_dt INT;
	SELECT order_date
		INTO order_dt
		FROM `Orders` o
		WHERE NEW.order_no = o.order_no;
	IF NEW.invoice_date < order_dt then
		SIGNAL sqlstate '45001' set message_text = "This invoice date is not valid, please enter an invoice date after the order date";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_delivery_to_pay
BEFORE INSERT
ON Invoice FOR EACH ROW
BEGIN 
	IF NEW.paid THEN 
		IF NOT EXISTS (SELECT * FROM Delivery d WHERE delivery_ref = NEW.delivery_ref) THEN 
			SIGNAL sqlstate '45001' set message_text = "Must have an associated delivery record before an invoice can be paid.";
		END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_dispatch_date
BEFORE INSERT
ON Invoice FOR EACH ROW
BEGIN 
	DECLARE dispatch_dt INT;
	SELECT dispatch_date
		INTO dispatch_dt
		FROM Delivery d
		WHERE NEW.delivery_ref = d.delivery_ref;
	IF NEW.invoice_date > dispatch_dt then
		SIGNAL sqlstate '45001' set message_text = "This invoice date is not valid, please enter an invoice date before the dispatch date";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_dispatch_date_update
BEFORE UPDATE 
ON Invoice FOR EACH ROW
BEGIN 
	DECLARE dispatch_dt INT;
	SELECT dispatch_date
		INTO dispatch_dt
		FROM Delivery d
		WHERE NEW.delivery_ref = d.delivery_ref;
	IF NEW.invoice_date > dispatch_dt then
		SIGNAL sqlstate '45001' set message_text = "This invoice date is not valid, please enter an invoice date before the dispatch date";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_order_date_update
BEFORE UPDATE 
ON Invoice FOR EACH ROW
BEGIN 
	DECLARE order_dt INT;
	SELECT order_date
		INTO order_dt
		FROM `Orders` o
		WHERE NEW.order_no = o.order_no;
	IF NEW.invoice_date < order_dt then
		SIGNAL sqlstate '45001' set message_text = "This invoice date is not valid, please enter an invoice date after the order date";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_payment_update
BEFORE UPDATE
ON Invoice FOR EACH ROW
BEGIN 
	DECLARE invoice_paid BOOL;
	
	SELECT paid
	INTO invoice_paid
	FROM Invoice i 
	WHERE i.invoice_no = OLD.invoice_no;
	
	IF invoice_paid and NEW.paid THEN 
		IF NEW.discount != OLD.discount THEN
			SIGNAL sqlstate '45001' set message_text = "You cannot change the discount after the invoice has been paid";
		END IF;
		IF NEW.vat != OLD.vat THEN
			SIGNAL sqlstate '45001' set message_text = "You cannot change the VAT after the invoice has been paid";
		END IF; 
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_delivery_to_pay_update
BEFORE UPDATE
ON Invoice FOR EACH ROW
BEGIN 
	IF NEW.paid THEN 
		IF NOT EXISTS (SELECT * FROM Delivery d WHERE delivery_ref = NEW.delivery_ref) THEN 
			SIGNAL sqlstate '45001' set message_text = "Must have an associated delivery record before an invoice can be paid.";
		END IF;
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `Invoice_Products`
--

DROP TABLE IF EXISTS `Invoice_Products`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Invoice_Products` (
  `invoice_no` varchar(100) NOT NULL,
  `product_code` varchar(100) NOT NULL,
  `bags` int(11) DEFAULT NULL,
  `quantity` bigint(20) DEFAULT NULL,
  `price_paid` decimal(5,2) DEFAULT NULL,
  PRIMARY KEY (`invoice_no`,`product_code`),
  KEY `Invoice_Products_FK_1` (`product_code`),
  CONSTRAINT `Invoice_Products_FK` FOREIGN KEY (`invoice_no`) REFERENCES `Invoice` (`invoice_no`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Invoice_Products_FK_1` FOREIGN KEY (`product_code`) REFERENCES `Product` (`product_code`),
  CONSTRAINT `Invoice_Products_CHECK` CHECK (`quantity` > 0)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Invoice_Products`
--

LOCK TABLES `Invoice_Products` WRITE;
/*!40000 ALTER TABLE `Invoice_Products` DISABLE KEYS */;
INSERT INTO `Invoice_Products` VALUES ('i1','p1',1,3,0.30);
/*!40000 ALTER TABLE `Invoice_Products` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_product_quantity_insert
BEFORE INSERT
ON Invoice_Products FOR EACH ROW

BEGIN 
	DECLARE invoice_quantity INT;
	DECLARE order_number VARCHAR(100);
	DECLARE order_quantity INT;

	SELECT order_no
	INTO order_number
	FROM Invoice i
	WHERE i.invoice_no = NEW.invoice_no;

	SELECT total_quantity 
	INTO invoice_quantity
	FROM 
		(SELECT product_code, sum(quantity) as total_quantity
		FROM Invoice i natural join Invoice_Products ip
		WHERE i.order_no = order_number
		GROUP BY product_code) as t1
	WHERE t1.product_code = NEW.product_code;

	SELECT quantity
	INTO order_quantity
	FROM Order_Products op 
	WHERE order_no = order_number and product_code = NEW.product_code;
	
	IF (invoice_quantity + NEW.quantity) > order_quantity THEN 
	SIGNAL sqlstate '45001' set message_text = "This product's quantity must be less than or equal to the product quantity on the order across all invoices. Make sure the invoices match up with the order.";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_paid_insert
BEFORE INSERT
ON Invoice_Products FOR EACH ROW

BEGIN 
	DECLARE invoice_paid BOOL;
	
	SELECT paid
	INTO invoice_paid
	FROM Invoice i2 
	WHERE i2.invoice_no = NEW.invoice_no;

	IF invoice_paid THEN 
		SIGNAL sqlstate '45001' set message_text = "You cannot change the products on the invoice after it has been paid";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_product_price_paid
BEFORE INSERT
ON Invoice_Products FOR EACH ROW
BEGIN
	DECLARE amount_paid DECIMAL(5,2);
	DECLARE price_group DECIMAL (3,2);

	SELECT price_lookup(NEW.product_code, NEW.quantity)
	INTO price_group;
	
	SET NEW.price_paid = price_group * NEW.quantity;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_product_quantity_update
BEFORE UPDATE 
ON Invoice_Products FOR EACH ROW

BEGIN 
	DECLARE invoice_quantity INT;
	DECLARE order_number VARCHAR(100);
	DECLARE order_quantity INT;

	SELECT order_no
	INTO order_number
	FROM Invoice i
	WHERE i.invoice_no = NEW.invoice_no;

	SELECT total_quantity 
	INTO invoice_quantity
	FROM 
		(SELECT product_code, sum(quantity) as total_quantity
		FROM Invoice i natural join Invoice_Products ip
		WHERE i.order_no = order_number
		GROUP BY product_code) as t1
	WHERE t1.product_code = NEW.product_code;

	SELECT quantity
	INTO order_quantity
	FROM Order_Products op 
	WHERE order_no = order_number and product_code = NEW.product_code;
	
	IF (invoice_quantity - OLD.quantity + NEW.quantity) > order_quantity THEN 
	SIGNAL sqlstate '45001' set message_text = "This product's quantity must be less than or equal to the product quantity on the order across all invoices. Make sure the invoices match up with the order.";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_paid_update
BEFORE UPDATE
ON Invoice_Products FOR EACH ROW

BEGIN
	DECLARE invoice_paid BOOL;
	
	SELECT paid
	INTO invoice_paid
	FROM Invoice i2 
	WHERE i2.invoice_no = OLD.invoice_no;

	IF invoice_paid THEN 
		SIGNAL sqlstate '45001' set message_text = "You cannot change the products on the invoice after it has been paid";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER invoice_product_price_paid_update
BEFORE UPDATE
ON Invoice_Products FOR EACH ROW
BEGIN
	DECLARE amount_paid DECIMAL(5,2);
	DECLARE price_group DECIMAL (3,2);

	SELECT price_lookup(NEW.product_code, NEW.quantity)
	INTO price_group;
	
	SET NEW.price_paid = price_group * NEW.quantity;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `Order_Products`
--

DROP TABLE IF EXISTS `Order_Products`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Order_Products` (
  `order_no` varchar(100) NOT NULL,
  `product_code` varchar(100) NOT NULL,
  `bags` int(11) DEFAULT NULL,
  `quantity` bigint(20) NOT NULL,
  PRIMARY KEY (`order_no`,`product_code`),
  KEY `Order_Products_FK_2` (`product_code`),
  CONSTRAINT `Order_Products_FK` FOREIGN KEY (`order_no`) REFERENCES `Orders` (`order_no`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Order_Products_FK_2` FOREIGN KEY (`product_code`) REFERENCES `Product` (`product_code`),
  CONSTRAINT `Order_Products_CHECK` CHECK (`quantity` > 0)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Order_Products`
--

LOCK TABLES `Order_Products` WRITE;
/*!40000 ALTER TABLE `Order_Products` DISABLE KEYS */;
INSERT INTO `Order_Products` VALUES ('o4','p2',1,2);
/*!40000 ALTER TABLE `Order_Products` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER order_product_quantity
BEFORE UPDATE 
ON Order_Products FOR EACH ROW
BEGIN 
	DECLARE invoice_quantity INT;
	SELECT total_quantity 
	INTO invoice_quantity
	FROM 
		(SELECT product_code, sum(quantity) as total_quantity
		FROM Invoice i natural join Invoice_Products ip
		WHERE i.order_no = NEW.order_no
		GROUP BY product_code) as t1
	WHERE t1.product_code = NEW.product_code;
	
	IF invoice_quantity > NEW.quantity THEN 
	SIGNAL sqlstate '45001' set message_text = "The order quantity may only be altered to higher than the quanity of this product already accounted for on invoices";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `Orders`
--

DROP TABLE IF EXISTS `Orders`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Orders` (
  `order_no` varchar(100) NOT NULL,
  `order_date` date DEFAULT NULL,
  `credit_period` int(11) DEFAULT NULL,
  `picked` tinyint(1) DEFAULT NULL,
  `location` varchar(100) DEFAULT NULL,
  `stock_reserve` tinyint(1) DEFAULT NULL,
  `customer_po` varchar(100) DEFAULT NULL,
  `quote_ref` int(11) DEFAULT NULL,
  `customer_ref` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`order_no`),
  UNIQUE KEY `Orders_UN` (`quote_ref`),
  KEY `Order_FK` (`quote_ref`),
  KEY `Order_FK_1` (`customer_ref`),
  CONSTRAINT `Order_FK_1` FOREIGN KEY (`customer_ref`) REFERENCES `Customer` (`customer_ref`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `Orders_FK` FOREIGN KEY (`quote_ref`) REFERENCES `Quote` (`quote_ref`) ON UPDATE CASCADE,
  CONSTRAINT `Orders_CHECK` CHECK (`picked` = 1 or `picked` = 0),
  CONSTRAINT `Orders_CHECK_stock` CHECK (`stock_reserve` = 1 or `stock_reserve` = 0)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Orders`
--

LOCK TABLES `Orders` WRITE;
/*!40000 ALTER TABLE `Orders` DISABLE KEYS */;
INSERT INTO `Orders` VALUES ('o4','2000-01-01',1234,1,'122',1,'122',1,'a4'),('o6','2000-06-23',1234,1,'122',0,'122',2,'a4');
/*!40000 ALTER TABLE `Orders` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER order_date_insert
BEFORE INSERT
ON `Orders` FOR EACH ROW
BEGIN 
	DECLARE invoice_dt DATE;
	SELECT invoice_date
		INTO invoice_dt
		FROM Invoice i2
		WHERE NEW.order_no = i2.order_no;
	IF NEW.order_date > invoice_dt then
		SIGNAL sqlstate '45001' set message_text = "This order date is not valid, please enter an order date before the invoice date";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER order_date_update
BEFORE UPDATE 
ON `Orders` FOR EACH ROW
BEGIN 
	DECLARE invoice_dt DATE;
	DECLARE done INT DEFAULT FALSE;

	DECLARE MY_CURSOR CURSOR FOR 
	SELECT invoice_date
	FROM Invoice i2
	WHERE NEW.order_no = i2.order_no;
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;

	OPEN MY_CURSOR;
	read_loop: LOOP
		FETCH MY_CURSOR INTO invoice_dt;
		IF done THEN
			LEAVE read_loop;
    	END IF;
   		IF NEW.order_date > invoice_dt then
			SIGNAL sqlstate '45001' set message_text = "This order date is not valid, please enter an order date before the invoice date";
				LEAVE read_loop;
	
	END IF;
   	END LOOP;

	CLOSE MY_CURSOR;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `Prices`
--

DROP TABLE IF EXISTS `Prices`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Prices` (
  `price_code` varchar(100) NOT NULL,
  `price_tens` decimal(3,2) DEFAULT NULL,
  `price_hundreds` decimal(3,2) DEFAULT NULL,
  `price_thousands` decimal(3,2) DEFAULT NULL,
  PRIMARY KEY (`price_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Prices`
--

LOCK TABLES `Prices` WRITE;
/*!40000 ALTER TABLE `Prices` DISABLE KEYS */;
INSERT INTO `Prices` VALUES ('1',0.10,0.11,0.13);
/*!40000 ALTER TABLE `Prices` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER price_update_unpaid_invoice
BEFORE UPDATE
ON Prices FOR EACH ROW

BEGIN 
	DECLARE payments_made INT;
	DECLARE invoices INT;

	SELECT DISTINCT count(*), sum(paid)
	INTO invoices, payments_made
	FROM
		(SELECT invoice_no, p.product_code 
		FROM Product p natural join Invoice_Products ip
		WHERE price_code = 'p1') as t1
	natural join
		Invoice i;
	
	IF OLD.price_tens != NEW.price_tens or OLD.price_hundreds != NEW.price_hundreds or OLD.price_thousands != NEW.price_thousands THEN
		IF payments_made > 0 and invoices != payments_made THEN 
			SIGNAL sqlstate '45001' set message_text = "The prices cannot be updated while unpaid invoices contain products using this price code. All invoices must be paid before prices can change.";
		END IF;
	END IF;
	
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `Product`
--

DROP TABLE IF EXISTS `Product`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Product` (
  `product_code` varchar(100) NOT NULL,
  `description` varchar(100) DEFAULT NULL,
  `size` varchar(10) DEFAULT NULL,
  `age` varchar(5) DEFAULT NULL,
  `master_certificate` varchar(100) DEFAULT NULL,
  `toBM` enum('CM','RP','ST') DEFAULT NULL,
  `cat` enum('SI','SE','QU') DEFAULT NULL,
  `origin` enum('I','NI','U') DEFAULT NULL,
  `prov_zone` varchar(100) DEFAULT NULL,
  `alt` varchar(100) DEFAULT NULL,
  `collection_site` varchar(100) DEFAULT NULL,
  `veg_prop` varchar(100) DEFAULT NULL,
  `notes` varchar(200) DEFAULT NULL,
  `species_code` varchar(100) DEFAULT NULL,
  `price_code` varchar(100) DEFAULT NULL,
  `supplier_code` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`product_code`),
  KEY `Product_FK` (`species_code`),
  KEY `Product_FK_1` (`price_code`),
  KEY `Product_FK_2` (`supplier_code`),
  CONSTRAINT `Product_FK` FOREIGN KEY (`species_code`) REFERENCES `Species` (`species_code`) ON UPDATE CASCADE,
  CONSTRAINT `Product_FK_1` FOREIGN KEY (`price_code`) REFERENCES `Prices` (`price_code`),
  CONSTRAINT `Product_FK_2` FOREIGN KEY (`supplier_code`) REFERENCES `Supplier` (`supplier_code`) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Product`
--

LOCK TABLES `Product` WRITE;
/*!40000 ALTER TABLE `Product` DISABLE KEYS */;
INSERT INTO `Product` VALUES ('p1','super tree','10-50','2','5','ST','SI','NI','my house','6','ur house','courgette','really good buy now','2','1','3'),('p2','super tree','10-50','2','5','ST','SI','NI','my house','6','ur house','courgette','really good buy now','2','1','3');
/*!40000 ALTER TABLE `Product` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Quote`
--

DROP TABLE IF EXISTS `Quote`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Quote` (
  `quote_ref` int(11) NOT NULL AUTO_INCREMENT,
  `quote_number` int(11) DEFAULT NULL,
  `order_date` date DEFAULT NULL,
  `credit_period` int(11) DEFAULT NULL,
  `picked` tinyint(1) DEFAULT NULL,
  `location` varchar(100) DEFAULT NULL,
  `stock_reserve` tinyint(1) DEFAULT NULL,
  `customer_po` varchar(100) DEFAULT NULL,
  `customer_ref` varchar(100) DEFAULT NULL,
  `quote_confirmed` tinyint(4) NOT NULL DEFAULT 0,
  PRIMARY KEY (`quote_ref`),
  KEY `Quote_FK` (`customer_ref`),
  CONSTRAINT `Quote_FK` FOREIGN KEY (`customer_ref`) REFERENCES `Customer` (`customer_ref`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `Quote_CHECK` CHECK (`quote_confirmed` = 1 or `quote_confirmed` = 0)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Quote`
--

LOCK TABLES `Quote` WRITE;
/*!40000 ALTER TABLE `Quote` DISABLE KEYS */;
INSERT INTO `Quote` VALUES (1,NULL,NULL,NULL,1,NULL,NULL,'123',NULL,1),(2,NULL,NULL,NULL,0,NULL,NULL,NULL,'a4',0);
/*!40000 ALTER TABLE `Quote` ENABLE KEYS */;
UNLOCK TABLES;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
/*!50003 CREATE*/ /*!50017 DEFINER=`root`@`%`*/ /*!50003 TRIGGER quote_stop_update
BEFORE UPDATE
ON Quote FOR EACH ROW
BEGIN
	IF OLD.quote_confirmed = 1 THEN
		SIGNAL sqlstate '45001' set message_text = "Cannot edit a quote after it has been confirmed as an order.";
	END IF;
END */;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;

--
-- Table structure for table `Quote_Products`
--

DROP TABLE IF EXISTS `Quote_Products`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Quote_Products` (
  `quote_ref` int(11) NOT NULL,
  `product_code` varchar(100) NOT NULL,
  `bags` int(11) DEFAULT NULL,
  `quantity` bigint(20) NOT NULL,
  PRIMARY KEY (`quote_ref`,`product_code`),
  KEY `Order_Products_FK_2` (`product_code`) USING BTREE,
  CONSTRAINT `Quote_Products_FK_1` FOREIGN KEY (`quote_ref`) REFERENCES `Quote` (`quote_ref`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Quote_Products_FK_3` FOREIGN KEY (`product_code`) REFERENCES `Product` (`product_code`),
  CONSTRAINT `Quote_Product_Check` CHECK (`quantity` > 0)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Quote_Products`
--

LOCK TABLES `Quote_Products` WRITE;
/*!40000 ALTER TABLE `Quote_Products` DISABLE KEYS */;
/*!40000 ALTER TABLE `Quote_Products` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Species`
--

DROP TABLE IF EXISTS `Species`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Species` (
  `species_code` varchar(100) NOT NULL,
  `common_name` varchar(100) DEFAULT NULL,
  `latin_name` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`species_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Species`
--

LOCK TABLES `Species` WRITE;
/*!40000 ALTER TABLE `Species` DISABLE KEYS */;
INSERT INTO `Species` VALUES ('2','darren tree','dareninaro');
/*!40000 ALTER TABLE `Species` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Supplier`
--

DROP TABLE IF EXISTS `Supplier`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Supplier` (
  `supplier_code` varchar(100) NOT NULL,
  `company_name` varchar(100) DEFAULT NULL,
  `address_number` varchar(50) DEFAULT NULL,
  `address_street` varchar(100) DEFAULT NULL,
  `address_town` varchar(100) DEFAULT NULL,
  `address_postcode` varchar(7) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`supplier_code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Supplier`
--

LOCK TABLES `Supplier` WRITE;
/*!40000 ALTER TABLE `Supplier` DISABLE KEYS */;
INSERT INTO `Supplier` VALUES ('3','tree seller','1','st','town','postcod','email'),('4','tree seller','1','st','town','postcod','email'),('5','tree seller','1','st','town','postcod','email');
/*!40000 ALTER TABLE `Supplier` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `Supplier_Phone`
--

DROP TABLE IF EXISTS `Supplier_Phone`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Supplier_Phone` (
  `supplier_code` varchar(100) NOT NULL,
  `phone_number` varchar(15) NOT NULL,
  PRIMARY KEY (`supplier_code`,`phone_number`),
  CONSTRAINT `Supplier_Phone_FK` FOREIGN KEY (`supplier_code`) REFERENCES `Supplier` (`supplier_code`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `Supplier_Phone_CHECK` CHECK (`phone_number` regexp '^0\\d{10}$')
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `Supplier_Phone`
--

LOCK TABLES `Supplier_Phone` WRITE;
/*!40000 ALTER TABLE `Supplier_Phone` DISABLE KEYS */;
INSERT INTO `Supplier_Phone` VALUES ('3','07563625144'),('3','07565625144');
/*!40000 ALTER TABLE `Supplier_Phone` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'taynuilttrees'
--
/*!50003 DROP FUNCTION IF EXISTS `generate_invoice_total` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `generate_invoice_total`(invoice_no varchar(100)) RETURNS decimal(6,2)
BEGIN
	DECLARE total DECIMAL(6,2);
	DECLARE product_total DECIMAL(6,2);
	DECLARE delivery DECIMAL(3,2);
	DECLARE discount_d INT;
	DECLARE vat_d INT;

	SELECT SUM(price_paid)
	INTO product_total
	FROM Invoice_Products ip 
	WHERE ip.invoice_no = invoice_no;

	SELECT delivery_charge 
	INTO delivery
	FROM Delivery d 
	WHERE delivery_ref = (SELECT delivery_ref FROM Invoice i WHERE i.invoice_no = invoice_no);

	SELECT discount
	INTO discount_d
	FROM Invoice i2 
	WHERE i2.invoice_no = invoice_no;

	SELECT vat
	INTO vat_d
	FROM Invoice i3 
	WHERE i3.invoice_no = invoice_no;

	set total = (product_total - (product_total*discount_d/100) + (product_total*vat_d/100)) + delivery;	

	RETURN total;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `price_lookup` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8mb4 */ ;
/*!50003 SET character_set_results = utf8mb4 */ ;
/*!50003 SET collation_connection  = utf8mb4_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'IGNORE_SPACE,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `price_lookup`(product_code_in varchar(100), quantity bigint) RETURNS decimal(3,2)
BEGIN
	DECLARE price DECIMAL(3,2);
	DECLARE price_col VARCHAR(30);
	DECLARE price_id VARCHAR(100);
	
	IF quantity < 100 THEN
		set @price_col = 'price_tens';
	ELSEIF quantity < 1000 THEN 
		set @price_col = 'price_hundreds';
	ELSE
		set @price_col = 'price_thousands';
	END IF;
	
	SELECT price_code
	INTO price_id
	FROM Product p 
	WHERE product_code = product_code_in;
	
	SELECT 
		CASE @price_col
			WHEN 'price_tens' 		THEN price_tens
			WHEN 'price_hundreds' 	THEN price_hundreds
			WHEN 'price_thousands' 	THEN price_thousands 
									ELSE NULL
		END as selectCol
	INTO price
	FROM Prices p
	WHERE price_code = price_id;

	RETURN price;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-08-25 11:42:53
